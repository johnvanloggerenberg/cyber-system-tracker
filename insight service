// This creates a WebServiceClient object that is thread-safe and can be
// reused across requests. Reusing the object will allow it to keep
// connections alive for future requests. The object is closeable, but
// it should not be closed until you are finished making requests with it.
//
// Replace "42" with your account ID and "license_key" with your license key.
try (WebServiceClient client = new WebServiceClient.Builder(42, "license_key")
        .build()) {

    InetAddress ipAddress = InetAddress.getByName("128.101.101.101");

    // Do the lookup
    InsightsResponse response = client.insights(ipAddress);

    Country country = response.getCountry();
    System.out.println(country.getIsoCode());            // 'US'
    System.out.println(country.getName());               // 'United States'
    System.out.println(country.getNames().get("zh-CN")); // '美国'
    System.out.println(country.getConfidence());         // 99

    Subdivision subdivision = response.getMostSpecificSubdivision();
    System.out.println(subdivision.getName());       // 'Minnesota'
    System.out.println(subdivision.getIsoCode());    // 'MN'
    System.out.println(subdivision.getConfidence()); // 90

    City city = response.getCity();
    System.out.println(city.getName());       // 'Minneapolis'
    System.out.println(city.getConfidence()); // 50

    Postal postal = response.getPostal();
    System.out.println(postal.getCode());       // '55455'
    System.out.println(postal.getConfidence()); // 40

    Location location = response.getLocation();
    System.out.println(location.getLatitude());        // 44.9733
    System.out.println(location.getLongitude());       // -93.2323
    System.out.println(location.getAccuracyRadius());  // 3
    System.out.println(location.getTimeZone());        // 'America/Chicago'

    System.out.println(response.getTraits().getUserType()); // 'college'
}
